% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gplsfitGCV.R
\name{gplsfitGCV}
\alias{gplsfitGCV}
\title{Generalized Penalized Least Square Fit under GCV}
\usage{
gplsfitGCV(Y, B, Q2, P, UB = NULL, lambda, family, offset, theta = 0,
  fx, control, start = NULL, etastart = NULL, mustart = NULL,
  X = NULL, ind_c = 1:ncol(X), fixedSteps = (control$maxstep + 1),
  ...)
}
\arguments{
\item{Y}{Response variable.}

\item{B}{The bernstein basis matrix.}

\item{Q2}{The \code{Q2} matrix from QR decomposition of the transpose of the constraint matrix.}

\item{P}{The penalty matrix.}

\item{UB}{The univariate basis function matrix constructed.}

\item{lambda}{The smoothing penalty parameter.}

\item{family}{The family object, specifying the distribution and link to use.}

\item{offset}{Can be used to supply a model offset for use in fitting. Note that this offset
will always be completely ignored when predicting.}

\item{theta}{The given theta values in negative binomial family.}

\item{fx}{indicates whether the term is a fixed d.f. regression}

\item{control}{A list of fit control parameters to replace defaults returned by \code{\link{plbpsm.control}}.
Any control parameters not supplied stay at their default values.
spline (\code{TRUE}) or a penalized regression spline (\code{FALSE}).}

\item{start}{Initial values for model coefficients}

\item{etastart}{Initial values for linear predictor.}

\item{mustart}{Initial values for the expected response.}

\item{X}{The parametric model matrix. set to '\code{NULL}' if it is not provided.}

\item{ind_c}{The vector of index to indicate the parametric part.}

\item{fixedSteps}{How many steps to take: useful when only using this routine to get rough starting
values for other methods.}

\item{...}{other arguments.}
}
\value{
A list of fit information.
}
\description{
This is an internal function of package \code{ggam}.
}
\details{
See section 4 'Implementation' in Shan et al. (2018).
}
\examples{
library(BPST)
data("eg_poi")
eg1_V1 <- eg_poi[['V1']]
eg1_T1 <- eg_poi[['T1']]
sam <- eg_poi[['sam_poi']]
d <- 2
r <- 1
B0 <- basis(eg1_V1,eg1_T1, d, r, sam[,c('loc1','loc2')])
B <- B0$Bi
ind <- B0$Ind.inside
Q2 <- B0$Q2
K <- B0$K
Z <- sam[ind,c(5:12)]
Y <- sam[ind,'y']
lambda_start <- 0.01
lambda_end <- 32
nlambda <- 10
lambda <- exp(seq(log(lambda_start),log(lambda_end),length.out=nlambda))
X <- sam[,1:15]
P <- t(Q2)\%*\%K\%*\%Q2
gplsfitGCV(Y,as.matrix(B),Q2,P,UB=NULL,lambda=lambda,family=poisson(),offset=0,fx=FALSE,
control = plbpsm.control(),X=as.matrix(X))
}
