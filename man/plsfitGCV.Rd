% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plsfitGCV.R
\name{plsfitGCV}
\alias{plsfitGCV}
\title{Penalized Least Square Fit under GCV}
\usage{
plsfitGCV(B, Q2, P, lambda, Y, fx, Z = NULL, ...)
}
\arguments{
\item{B}{The bernstein basis matrix.}

\item{Q2}{The \code{Q2} matrix from QR decomposition of the transpose of the constraint matrix.}

\item{P}{The penalty matrix.}

\item{lambda}{The smoothing penalty parameter.}

\item{Y}{Response variable.}

\item{fx}{indicates whether the term is a fixed d.f. regression
spline (\code{TRUE}) or a penalized regression spline (\code{FALSE}).}

\item{Z}{The parametric model matrix. set to '\code{NULL}' if it is not provided.}

\item{...}{other arguments.}
}
\value{
A list of fit information.
}
\description{
This is an internal function of package \code{ggam}.
}
\details{
The method is a computationally efficient means of applying \code{GCV} to the problem of smoothing parameter selection:
\deqn{\min _ { \boldsymbol { \beta } , \boldsymbol { \gamma } } \frac { 1 } { 2 } \left\{ \| \mathbf { Y } - \mathbf { Z } \boldsymbol { \beta } - \mathbf { B } \boldsymbol { \gamma } \| ^ { 2 } + \lambda \boldsymbol { \gamma } ^ { \top } \mathbf { P } \gamma \right\}}{\min _ { \boldsymbol { \beta } , \boldsymbol { \gamma } } \frac { 1 } { 2 } \left\{ \| \mathbf { Y } - \mathbf { Z } \boldsymbol { \beta } - \mathbf { B } \boldsymbol { \gamma } \| ^ { 2 } + \lambda \boldsymbol { \gamma } ^ { \top } \mathbf { P } \gamma \right\}}
subject to constraints \eqn{\mathbf { H } \gamma = \mathbf { 0 }}{\mathbf { H } \gamma = \mathbf { 0 }}.
\code{Z} is a parametrix design matrix, \eqn{\beta}{\beta} a parameter vector, \eqn{Y}{Y} a data vector,
\eqn{\gamma}{\gamma} is the berstein coefficients, \eqn{B}{B} is the Bernsterin basis matrix,
\eqn{H}{H} is contraint matrix.
}
\examples{
library(Matrix)
library(BPST)
data("eg1pop_dat")
eg1_V1=eg1pop_dat[['V1']]
eg1_T1=eg1pop_dat[['T1']]
eg1pop_rho03=eg1pop_dat[['rho03']]
sam=eg1pop_rho03[sample(1:dim(eg1pop_rho03)[1],100),]
B0=basis(eg1_V1,eg1_T1, d=2, r=1, sam[,3:4])
B=B0$Bi
ind=B0$Ind.inside
Q2=B0$Q2
K=B0$K
P=t(Q2)\%*\%K\%*\%Q2
Z=sam[ind,c(5:12)]
Y=sam[ind,'Y']
lambda=10^(seq(-2,5,by=1))
plsfitGCV(as.matrix(B),Q2,P,lambda,Y,fx=FALSE,Z=Z)

### without parametric part
plsfitGCV(as.matrix(B),Q2,P,lambda,Y,fx=FALSE)
}
